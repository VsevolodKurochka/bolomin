//MIXIN FONT
@mixin connect-font($font,$class_name: $font){
  @font-face{
    font-family: $font;
    src: local("#{$font}"), 
    url(../fonts/#{$font}.otf);
  }
  @if $class_name != null{
    .#{$class_name}{
      font-family: $font;
    }
  }@else{
    .#{$font}{
      font-family: $font;
    }
  }
}

//MIXIN SIZES
@mixin font-size($fs-map, $fs-breakpoints: $breakpoints){
  @each $fs-breakpoint, $fs-font-size in $fs-map {
    $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
    @if $fs-breakpoint != null{
      @media (min-width: $fs-breakpoint){
        font-size: $fs-font-size;
      }
    }@else{
      @error 'No size';
    }
  } 
}
@mixin size($size){
  $value: map-get($sizes, $size);
  @if $value != null{
    font-size: $value;
  }
  @else{
    @error 'Sorry, no size #{$size}';
  }
}

// MIXIN BACKGROUND
@mixin bg($url, $pos: 0 0, $repeat: no-repeat, $size: cover){
	background: url($url) $pos $repeat;
	background-size: $size;
}
//CREATE COLUMNS
@mixin make-column($class,$push: "push",$pull: "pull",$offset: "offset"){
  @for $i from 1 through $columns{
    @if $class != null{
      .vcol-#{$class}-#{$i}{
        width: ($width/$columns) * $i;
      }      
    }
    @if $push != "not-push"{
      .vcol-#{$class}-push-#{$i}{
        left: ($width/$columns) * $i;
      }      
    }
    @if $pull != "not-pull"{
      .vcol-#{$class}-pull-#{$i}{
        right: ($width/$columns) * $i;
      }
    }
    @if $offset != "not-offset" {
      .vcol-#{$class}-offset-#{$i}{
        margin-left: ($width/$columns) * $i;
      }
    }
  }
}
// HIDDEN AND VISIBLE UTILITIES
@mixin visibility-hidden($hidden){
  .hidden-#{$hidden}{
    display: none !important;
  }
}
@mixin visibility-visible($visible){
  .visible-#{$visible}{
    display: block !important;
  }
}

// @mixin diffBrowsers($property){
//   -ms-#{$property}
// }
@mixin transform($transform){
  -webkit-transform: $transform;
      -ms-transform: $transform;
       -o-transform: $transform;
          transform: $transform; 
}
@mixin border($border){
  -webkit-border-radius: $border; 
     -moz-border-radius: $border; 
          border-radius: $border;  
}
@mixin transition($transition){
  -webkit-transition: $transition;
       -o-transition: $transition;
          transition: $transition;
}
@mixin shadow($shadow){
  -webkit-box-shadow: $shadow;
     -moz-box-shadow: $shadow;
          box-shadow: $shadow;
}
@mixin pseudo($contentText: ""){
  content: $contentText;
  position: absolute;
}